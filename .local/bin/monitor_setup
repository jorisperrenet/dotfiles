#!/bin/python

import os
import json
from time import sleep


os.system('pkill dunst')
os.system('dunst &')
cache = os.popen('echo "$XDG_CACHE_HOME"').read()[:-1]
exist = os.popen('ls "$XDG_CACHE_HOME"').read()

os.system('xrandr --auto')
connected = os.popen('xrandr --prop | grep -w connected').read()
connected = connected.split('\n')[:-1]
c2 = []
for line in connected:
    print(line)
    c2.append(line[:line.index('+')] + line[line.index('('):])
connected = c2

if 'screens.json' in exist:
    file1 = open(cache + '/screens.json', 'r')
    text = file1.read()
    file1.close()
    if text == '':
        dct = {}
    else:
        dct = json.loads(text)
    keys = []
    for k, v in dct.items():
        if v['output'] == connected:
            keys.append(k)
    print(keys, len(connected))
    if keys == []:
        if len(connected) == 1:
            os.system('notify-send "1 monitor connected" "no setup found, but is not needed"')
        else:
            os.system('notify-send "multiple monitors connected" "redirecting to program ..."')
            sleep(3)
            os.system('python3 "$XDG_CONFIG_HOME"/mon_setup/program.py')
    else:
        if 'main' in keys:
            os.system('notify-send "using main monitor command"')
            os.system(dct['main']['command'])
        else:
            key = min(int(i) for i in keys)
            os.system('notify-send "using command for ' + str(len(connected)) + ' monitors"')
            os.system(dct[str(key)]['command'])
else:
    # no idea what setup
    if len(connected) == 1:
        os.system('notify-send "1 monitor connected" "no setup found, but is not needed"')
    else:
        os.system('notify-send "multiple monitors connected" "redirecting to program ..."')
        sleep(3)
        os.system('python3 "$XDG_CONFIG_HOME"/mon_setup/program.py')
